{"version":3,"sources":["firebase.js","GoBack.js","Transfer.js","User.js","AllUsers.js","Transactions.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GoBack","_this","this","react_default","a","createElement","onClick","props","goBack","React","Component","Transfer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","name","email","credits","state","value","usersList","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","amount","transferCredit","uid","preventDefault","from_uid","to_uid","from_user","to_user","database","ref","once","dataSnaphot","users","val","Number","set","updateTransactions","push","from","to","openPopupbox","content","PopupboxManager","open","_this2","on","dataSnapshot","_this3","Fragment","onSubmit","onChange","map","user","type","min","max","react_popupbox","fadeIn","fadeInSpeed","src_GoBack","User","snapshot","newState","src_Transfer","AllUsers","usersRef","item","src_User","page","Transactions","items","itemsRef","transfers","_loop","HomePage","src_AllUsers","src_Transactions","App","src_HomePage","handlePageRequest","handleGoingBack","history","concat","pop","className","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.481c9259.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\"\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBkOV24lMbrTIVbPE3KVlEPLxE-u5S80MA\",\n    authDomain: \"creditdb-r.firebaseapp.com\",\n    databaseURL: \"https://creditdb-r.firebaseio.com\",\n    projectId: \"creditdb-r\",\n    storageBucket: \"creditdb-r.appspot.com\",\n    messagingSenderId: \"46852241260\",\n    appId: \"1:46852241260:web:e7a954bec4864f2e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from 'react';\n\nclass GoBack extends React.Component {\n    render() {\n        return (\n            <button\n            onClick = {() => {this.props.goBack()}}\n            >\n                Go Back\n            </button>\n        );\n    }\n}\n\nexport default GoBack;","import React from 'react';\nimport firebase from './firebase.js';\nimport GoBack from './GoBack.js';\nimport {PopupboxManager, PopupboxContainer} from 'react-popupbox';\n\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.name = '';\n        this.email = '';\n        this.credits = '';\n        this.state = {\n            value: '-1',\n            usersList: [],\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(event) {\n        this.setState({\n            value: event.target.value,\n            usersList: this.state.usersList,\n        });\n    }\n    \n    handleSubmit(event) {\n        let amount = event.target[1].value;\n        this.transferCredit(amount, this.props.uid, this.state.value);\n        event.target[1].value = 0;\n        event.preventDefault();\n    }\n\n    transferCredit(amount, from_uid, to_uid) {\n        const usersRef = firebase.database().ref('users');\n        let from_user;\n        let to_user;\n\n        usersRef.once('value', (dataSnaphot) => {\n            const users = dataSnaphot.val();\n            from_user = {\n                name: users[from_uid].name,\n                email: users[from_uid].email,\n                credits: Number(users[from_uid].credits) - Number(amount),\n            };\n            to_user = {\n                name: users[to_uid].name,\n                email: users[to_uid].email,\n                credits: Number(users[to_uid].credits) + Number(amount),\n            };\n        });\n\n        firebase.database().ref('users/'+from_uid).set(from_user);\n        firebase.database().ref('users/'+to_uid).set(to_user);\n\n        this.updateTransactions(amount, from_uid, to_uid);\n    }\n\n    updateTransactions(amount, from_uid, to_uid){\n        const transfersRef = firebase.database().ref('transfers');\n        transfersRef.push(\n            {\n                from: from_uid,\n                to: to_uid,\n                credits: Number(amount),\n            }\n        );\n        this.openPopupbox();\n    }\n\n    openPopupbox() {\n        const content = (\n          <div>\n            <p>\n                Your transaction was successful\n            </p>\n          </div>\n        )\n        PopupboxManager.open({ content })\n      }\n\n    componentDidMount() {\n        const usersRef = firebase.database().ref('users');\n        usersRef.on(\"value\", (dataSnapshot) => {\n            let users = dataSnapshot.val();\n            let usersList = [];\n            for (let uid in users) {\n                usersList.push({\n                    uid: uid,\n                    name: users[uid].name,\n                })\n            }\n            this.name = users[this.props.uid].name;\n            this.email = users[this.props.uid].email;\n            this.credits = users[this.props.uid].credits;\n            this.setState({\n                value: this.state.value,\n                usersList: usersList,\n            });\n        });\n    }\n    \n    render() {\n        const popupboxConfig = {\n            fadeIn: true,\n            fadeInSpeed: 500\n        }\n\n        return (\n            <>\n            <h1>{this.name}</h1>\n            <p>{this.email}</p>\n            <p>Credits : {this.credits}</p>\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Select User \n                <select value={this.state.value} onChange={this.handleChange}>\n                    <option value = '-1'>Select user to transfer to</option>\n                    {\n                        this.state.usersList.map((user) => {\n                            return (<option value = {user.uid}>{user.name}</option>);\n                            })\n                    }\n                </select>\n                </label>\n                <label>\n                    Amount\n                    <input type=\"number\" min=\"0\" max={this.credits}/>\n                </label>\n                <input type=\"submit\" value=\"Transfer\" />\n            </form>\n            <PopupboxContainer { ...popupboxConfig } />\n            <GoBack\n            goBack = {() => {this.props.goBack()}}\n            />\n            </>\n        );\n    }\n}\n\nexport default Transfer ;","import React from 'react';\nimport firebase from './firebase.js';\nimport GoBack from './GoBack.js';\nimport Transfer from './Transfer.js';\n\nclass User extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {user:\"\"};\n    }\n\n    componentDidMount(){\n        const usersRef = firebase.database().ref('users');\n        \n        usersRef.on(\"value\", (snapshot) => {\n          let users = snapshot.val();\n          let newState = {user: users[this.props.uid]};\n          this.setState(newState);\n        });\n    }\n\n    render(){\n        return(\n            <>\n            <h1>{this.state.user.name}</h1>\n            <p>{this.state.user.email}</p>\n            <p>Credits : {this.state.user.credits}</p>\n            <button \n            onClick = {() => {\n                                this.props.onClick(<Transfer\n                                                    uid = {this.props.uid}\n                                                    goBack = {() => this.props.goBack()}\n                                                    />\n                                                )\n                            }\n                    }\n            >\n                Transfer Credits\n            </button>\n            <GoBack\n            goBack = {() => {this.props.goBack()}}\n            />\n            </>\n        );\n    }\n}\n\nexport default User;","import firebase from './firebase.js';\nimport React from 'react';\nimport GoBack from './GoBack.js';\nimport User from './User.js'\n\nclass AllUsers extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          users: [],\n        };\n      }\n    \n      componentDidMount() {\n        const usersRef = firebase.database().ref('users');\n        let newState = [];\n        usersRef.on(\"value\", (snapshot) => {\n          let users = snapshot.val();\n          for (let item in users) {\n            newState.push({\n              name : users[item].name,\n              email : users[item].email,\n              credits : users[item].credits,\n              uid : item,\n            });\n          }\n          this.setState({\n            users : newState,\n          });\n        });\n      }\n\n\n    render() {\n        return (\n            <>\n            <table>\n            <caption>All Users</caption>\n            <thead>\n              <td>Name</td>\n              <td>Email</td>\n              <td>Credits</td>\n              <td>View User</td>\n            </thead>\n            <tbody>\n            {\n              this.state.users.map((user) => {\n                return (\n                  <tr>\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n                    <td>{user.credits}</td>\n                    <td>\n                      <button \n                      onClick = {\n                        () => {\n                          this.props.onClick(<User \n                                              uid = {user.uid} \n                                              goBack = {\n                                                () => {\n                                                  this.props.goBack()\n                                                }\n                                              }\n                                              onClick = {\n                                                (page) => {\n                                                  this.props.onClick(page)\n                                                }\n                                              }\n                                              />\n                                            )\n                          }\n                        }\n                        >\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })\n              }\n              </tbody>\n            </table>\n            <GoBack\n            goBack = {() => {this.props.goBack()}}\n            />\n            </>\n          );\n      }\n  }\n\nexport default AllUsers;","import React from 'react';\nimport firebase from './firebase.js';\nimport GoBack from './GoBack.js';\n\nclass Transactions extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            items: [],\n        };\n    }\n\n    componentDidMount(){\n        const itemsRef = firebase.database().ref('transfers');\n        const usersRef = firebase.database().ref('users');\n        let newState = [];\n        itemsRef.on(\"value\", (snapshot) => {\n          let transfers = snapshot.val();\n          for (let item in transfers) {\n              let from;\n              let to;\n              usersRef.once(\"value\", (snapshot) => {\n                  let users = snapshot.val();\n                  from = users[transfers[item].from].name;\n                  to = users[transfers[item].to].name;\n                  newState.push({\n                    from: from,\n                    to: to,\n                    credits: transfers[item].credits,\n                  });\n                  this.setState({\n                    items : newState,\n                  });\n                });\n          }\n        });\n    }\n    render(){\n        return(\n            <>\n            <table>\n                <caption>All Transactions</caption>\n                <thead>\n                    <td>From</td>\n                    <td>To</td>\n                    <td>Credits</td>\n                </thead>\n                <tbody>\n                    {\n                        this.state.items.map((item) => {\n                            return (\n                                <tr>\n                                    <td>{item.from}</td>\n                                    <td>{item.to}</td>\n                                    <td>{item.credits}</td>\n                                </tr>\n                            );\n                        })\n                    }\n                </tbody>\n            </table>\n            <GoBack\n            goBack = {() => {this.props.goBack()}}\n            />\n            </>\n        );\n    }\n}\n\nexport default Transactions;","import React from 'react';\nimport AllUsers from './AllUsers.js';\nimport Transactions from './Transactions.js';\n\nclass HomePage extends React.Component {\n    render() {\n        return (\n            <>\n            <button \n            onClick = {() => this.props.onClick(<AllUsers \n                                                goBack = {() => {this.props.goBack()}}\n                                                onClick = {(page) => {this.props.onClick(page)}}\n                                                />)\n                        }\n            >\n                Show All Users\n            </button>\n            <button\n            onClick = {() => this.props.onClick(<Transactions \n                                                goBack = {() => {this.props.goBack()}} \n                                                />)\n                        }\n            >\n                Show All Transactions\n            </button>\n            </>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport './App.css';\nimport HomePage from './HomePage.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content : <HomePage \n                onClick = {(page) => {this.handlePageRequest(page)}}\n                goBack = {() => {this.handleGoingBack()}}\n                />,\n      history: [],\n    }\n  }\n\n  handlePageRequest(page) {\n    this.setState({\n      content: page,\n      history: this.state.history.concat(this.state.content),\n    });\n  }\n\n  handleGoingBack(){\n    this.setState({\n      content: this.state.history.pop(),\n      history: this.state.history,\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Credit Management App\n        </header>\n        <main>\n          {this.state.content}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}