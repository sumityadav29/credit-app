{"version":3,"sources":["firebase.js","GoBack.js","AllUsers.js","Transactions.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GoBack","_this","this","react_default","a","createElement","onClick","props","goBack","React","Component","AllUsers","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","items","_this2","itemsRef","database","ref","newState","on","snapshot","val","item","push","name","email","credits","setState","_this3","Fragment","map","src_GoBack","Transactions","usersRef","transfers","_loop","from","to","once","users","HomePage","src_AllUsers","src_Transactions","App","content","src_HomePage","page","handlePageRequest","handleGoingBack","history","concat","pop","className","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12326d1a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\"\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBkOV24lMbrTIVbPE3KVlEPLxE-u5S80MA\",\n    authDomain: \"creditdb-r.firebaseapp.com\",\n    databaseURL: \"https://creditdb-r.firebaseio.com\",\n    projectId: \"creditdb-r\",\n    storageBucket: \"creditdb-r.appspot.com\",\n    messagingSenderId: \"46852241260\",\n    appId: \"1:46852241260:web:e7a954bec4864f2e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from 'react';\n\nclass GoBack extends React.Component {\n    render() {\n        return (\n            <button\n            onClick = {() => {this.props.goBack()}}\n            >\n                Go Back\n            </button>\n        );\n    }\n}\n\nexport default GoBack;","import firebase from './firebase.js';\nimport React from 'react';\nimport GoBack from './GoBack.js';\nimport HomePage from './HomePage.js';\n\nclass AllUsers extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          items: [],\n        };\n      }\n    \n      componentDidMount() {\n        const itemsRef = firebase.database().ref('users');\n        let newState = [];\n        itemsRef.on(\"value\", (snapshot) => {\n          let items = snapshot.val();\n          for (let item in items) {\n            newState.push({\n              name : items[item].name,\n              email : items[item].email,\n              credits : items[item].credits,\n            });\n          }\n          this.setState({\n            items : newState,\n          });\n        });\n      }\n\n\n    render() {\n        return (\n            <>\n            <table>\n            <caption>All Users</caption>\n            <thead>\n              <td>Name</td>\n              <td>Email</td>\n              <td>Credits</td>\n            </thead>\n            <tbody>\n            {\n              this.state.items.map((item) => {\n                return (\n                  <tr>\n                    <td>{item.name}</td>\n                    <td>{item.email}</td>\n                    <td>{item.credits}</td>\n                  </tr>\n                );\n              })\n            }\n            </tbody>\n          </table>\n          <GoBack\n          goBack = {() => {this.props.goBack()}}\n          />\n          </>\n        );\n    }\n}\n\nexport default AllUsers;","import React from 'react';\nimport firebase from './firebase.js';\nimport GoBack from './GoBack.js';\n\n/* eslint-disable no-unused-expressions */\n\nclass Transactions extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            items: [],\n        };\n    }\n\n    componentDidMount(){\n        const itemsRef = firebase.database().ref('transfers');\n        const usersRef = firebase.database().ref('users');\n        let newState = [];\n        itemsRef.on(\"value\", (snapshot) => {\n          let transfers = snapshot.val();\n          for (let item in transfers) {\n              let from;\n              let to;\n              usersRef.once(\"value\", (snapshot) => {\n                  let users = snapshot.val();\n                  from = users[transfers[item].from].name;\n                  to = users[transfers[item].to].name;\n                  newState.push({\n                    from: from,\n                    to: to,\n                    credits: transfers[item].credits,\n                  });\n                  this.setState({\n                    items : newState,\n                  });\n                });\n          }\n        });\n    }\n    render(){\n        return(\n            <>\n            <table>\n                <caption>All Transactions</caption>\n                <thead>\n                    <td>From</td>\n                    <td>To</td>\n                    <td>Credits</td>\n                </thead>\n                <tbody>\n                    {\n                        this.state.items.map((item) => {\n                            return (\n                                <tr>\n                                    <td>{item.from}</td>\n                                    <td>{item.to}</td>\n                                    <td>{item.credits}</td>\n                                </tr>\n                            );\n                        })\n                    }\n                </tbody>\n            </table>\n            <GoBack\n            goBack = {() => {this.props.goBack()}}\n            />\n            </>\n        );\n    }\n}\n\nexport default Transactions;","import React from 'react';\nimport AllUsers from './AllUsers.js';\nimport Transactions from './Transactions.js';\n\nclass HomePage extends React.Component {\n    render() {\n        return (\n            <>\n            <button \n            onClick = {() => this.props.onClick(<AllUsers goBack = {() => {this.props.goBack()}}/>)}>\n                Show All Users\n            </button>\n            <button\n            onClick = {() => this.props.onClick(<Transactions goBack = {() => {this.props.goBack()}} />)}>\n                Show All Transactions\n            </button>\n            </>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport './App.css';\nimport HomePage from './HomePage.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content : <HomePage \n                onClick = {(page) => {this.handlePageRequest(page)}}\n                goBack = {() => {this.handleGoingBack()}}\n                />,\n      history: [],\n    }\n  }\n\n  handlePageRequest(page) {\n    this.setState({\n      content: page,\n      history: this.state.history.concat(this.state.content),\n    });\n  }\n\n  handleGoingBack(){\n    this.setState({\n      content: this.state.history.pop(),\n      history: this.state.history,\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Credit Management App\n        </header>\n        <main>\n          {this.state.content}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}