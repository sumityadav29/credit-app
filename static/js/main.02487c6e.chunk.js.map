{"version":3,"sources":["firebase.js","Transfer.js","User.js","AllUsers.js","Transactions.js","HomePage.js","GoBack.js","GoHome.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Transfer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","email","credits","state","value","usersList","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","amount","transferCredit","uid","preventDefault","from_uid","to_uid","from_user","to_user","database","ref","once","dataSnaphot","users","val","Number","set","updateTransactions","push","from","to","openPopupbox","content","react_default","a","createElement","style","color","PopupboxManager","open","_this2","on","dataSnapshot","Fragment","onSubmit","class","onChange","map","user","type","min","max","react_popupbox","fadeIn","fadeInSpeed","React","Component","User","snapshot","newState","_this3","onClick","src_Transfer","AllUsers","usersRef","item","src_User","page","Transactions","items","itemsRef","transfers","_loop","HomePage","src_AllUsers","src_Transactions","GoBack","goBack","GoHome","goHome","App","src_HomePage","handlePageRequest","history","handleGoingBack","handleGoHomeRequest","concat","pop","className","src_GoHome","src_GoBack","backgroundImage","paddingTop","paddingBottom","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02487c6e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\"\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBkOV24lMbrTIVbPE3KVlEPLxE-u5S80MA\",\n    authDomain: \"creditdb-r.firebaseapp.com\",\n    databaseURL: \"https://creditdb-r.firebaseio.com\",\n    projectId: \"creditdb-r\",\n    storageBucket: \"creditdb-r.appspot.com\",\n    messagingSenderId: \"46852241260\",\n    appId: \"1:46852241260:web:e7a954bec4864f2e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from 'react';\nimport firebase from './firebase.js';\nimport {PopupboxManager, PopupboxContainer} from 'react-popupbox';\n\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.name = '';\n        this.email = '';\n        this.credits = '';\n        this.state = {\n            value: '-1',\n            usersList: [],\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(event) {\n        this.setState({\n            value: event.target.value,\n            usersList: this.state.usersList,\n        });\n    }\n    \n    handleSubmit(event) {\n        let amount = event.target[1].value;\n        if (amount == 0 || this.state.value == -1){\n            return;\n        }\n        this.transferCredit(amount, this.props.uid, this.state.value);\n        event.target[1].value = null;\n        event.preventDefault();\n    }\n\n    transferCredit(amount, from_uid, to_uid) {\n        const usersRef = firebase.database().ref('users');\n        let from_user;\n        let to_user;\n\n        usersRef.once('value', (dataSnaphot) => {\n            const users = dataSnaphot.val();\n            from_user = {\n                name: users[from_uid].name,\n                email: users[from_uid].email,\n                credits: Number(users[from_uid].credits) - Number(amount),\n            };\n            to_user = {\n                name: users[to_uid].name,\n                email: users[to_uid].email,\n                credits: Number(users[to_uid].credits) + Number(amount),\n            };\n        });\n\n        firebase.database().ref('users/'+from_uid).set(from_user);\n        firebase.database().ref('users/'+to_uid).set(to_user);\n\n        this.updateTransactions(amount, from_uid, to_uid);\n    }\n\n    updateTransactions(amount, from_uid, to_uid){\n        const transfersRef = firebase.database().ref('transfers');\n        transfersRef.push(\n            {\n                from: from_uid,\n                to: to_uid,\n                credits: Number(amount),\n            }\n        );\n        this.openPopupbox();\n    }\n\n    openPopupbox() {\n        const content = (\n          <div>\n            <p style = {{'color':'green'}}>\n                Your transaction was successful\n            </p>\n          </div>\n        )\n        PopupboxManager.open({ content })\n      }\n\n    componentDidMount() {\n        const usersRef = firebase.database().ref('users');\n        usersRef.on(\"value\", (dataSnapshot) => {\n            let users = dataSnapshot.val();\n            let usersList = [];\n            for (let uid in users) {\n                usersList.push({\n                    uid: uid,\n                    name: users[uid].name,\n                })\n            }\n            this.name = users[this.props.uid].name;\n            this.email = users[this.props.uid].email;\n            this.credits = users[this.props.uid].credits;\n            this.setState({\n                value: this.state.value,\n                usersList: usersList,\n            });\n        });\n    }\n    \n    render() {\n        const popupboxConfig = {\n            fadeIn: true,\n            fadeInSpeed: 500\n        }\n\n        return (\n            <>\n            <h1>{this.name}</h1>\n            <p>{this.email}</p>\n            <p>Credits : {this.credits}</p>\n            <form onSubmit={this.handleSubmit}>\n                <label class = 'formlabels'>\n                    Select User<br/><br/>\n                <select value={this.state.value} onChange={this.handleChange}>\n                    <option value = '-1'>Select user to transfer to</option>\n                    {\n                        this.state.usersList.map((user) => {\n                            return (<option value = {user.uid}>{user.name}</option>);\n                            })\n                    }\n                </select>\n                </label>\n                <br/><br/>\n                <label class = 'formlabels'>\n                    Enter Amount<br/><br/>\n                    <input type=\"number\" min=\"0\" max={this.credits}/>\n                </label>\n                <PopupboxContainer { ...popupboxConfig } />\n                <br/>\n                <input class = 'styledbutton' type=\"submit\" value=\"Transfer\" />\n            </form>\n            </>\n        );\n    }\n}\n\nexport default Transfer ;","import React from 'react';\nimport firebase from './firebase.js';\nimport Transfer from './Transfer.js';\n\nclass User extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {user:\"\"};\n    }\n\n    componentDidMount(){\n        const usersRef = firebase.database().ref('users');\n        \n        usersRef.on(\"value\", (snapshot) => {\n          let users = snapshot.val();\n          let newState = {user: users[this.props.uid]};\n          this.setState(newState);\n        });\n    }\n\n    render(){\n        return(\n            <>\n            <h1>{this.state.user.name}</h1>\n            <p>{this.state.user.email}</p>\n            <p>Credits : {this.state.user.credits}</p>\n            <button \n            class = 'styledbutton'\n            onClick = {() => {\n                                this.props.onClick(<Transfer\n                                                    uid = {this.props.uid}\n                                                    />\n                                                )\n                            }\n                    }\n            >\n                Transfer Credits\n            </button>\n            </>\n        );\n    }\n}\n\nexport default User;","import firebase from './firebase.js';\nimport React from 'react';\nimport User from './User.js'\n\nclass AllUsers extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          users: [],\n        };\n      }\n    \n      componentDidMount() {\n        const usersRef = firebase.database().ref('users');\n        let newState = [];\n        usersRef.on(\"value\", (snapshot) => {\n          let users = snapshot.val();\n          for (let item in users) {\n            newState.push({\n              name : users[item].name,\n              email : users[item].email,\n              credits : users[item].credits,\n              uid : item,\n            });\n          }\n          this.setState({\n            users : newState,\n          });\n        });\n      }\n\n\n    render() {\n        return (\n            <>\n            <h1>All Users</h1>\n            <table class = 'users'>\n            <thead class = 'tableheader'>\n              <td>Name</td>\n              <td>Email</td>\n              <td>Credits</td>\n              <td>View User</td>\n            </thead>\n            <tbody>\n            {\n              this.state.users.map((user) => {\n                return (\n                  <tr>\n                    <td class = 'userdata'>{user.name}</td>\n                    <td class = 'userdata'>{user.email}</td>\n                    <td class = 'userdata'>{user.credits}</td>\n                    <td class = 'userdata'>\n                      <button \n                      onClick = {\n                        () => {\n                          this.props.onClick(<User \n                                              uid = {user.uid} \n                                              onClick = {\n                                                (page) => {\n                                                  this.props.onClick(page)\n                                                }\n                                              }\n                                              />\n                                            )\n                          }\n                        }\n                        >\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })\n              }\n              </tbody>\n            </table>\n            </>\n          );\n      }\n  }\n\nexport default AllUsers;","import React from 'react';\nimport firebase from './firebase.js';\n\nclass Transactions extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            items: [],\n        };\n    }\n\n    componentDidMount(){\n        const itemsRef = firebase.database().ref('transfers');\n        const usersRef = firebase.database().ref('users');\n        let newState = [];\n        itemsRef.on(\"value\", (snapshot) => {\n          let transfers = snapshot.val();\n          for (let item in transfers) {\n              let from;\n              let to;\n              usersRef.once(\"value\", (snapshot) => {\n                  let users = snapshot.val();\n                  from = users[transfers[item].from].name;\n                  to = users[transfers[item].to].name;\n                  newState.push({\n                    from: from,\n                    to: to,\n                    credits: transfers[item].credits,\n                  });\n                  this.setState({\n                    items : newState,\n                  });\n                });\n          }\n        });\n    }\n    render(){\n        return(\n            <>\n            <h1>All Transactions</h1>\n            <table class = 'transactions'>\n                <thead class = 'tableheader'>\n                    <td>From</td>\n                    <td>To</td>\n                    <td>Credits</td>\n                </thead>\n                <tbody>\n                    {\n                        this.state.items.map((item) => {\n                            return (\n                                <tr>\n                                    <td class = 'transdata'>{item.from}</td>\n                                    <td class = 'transdata'>{item.to}</td>\n                                    <td class = 'transdata'>{item.credits}</td>\n                                </tr>\n                            );\n                        })\n                    }\n                </tbody>\n            </table>\n            </>\n        );\n    }\n}\n\nexport default Transactions;","import React from 'react';\nimport AllUsers from './AllUsers.js';\nimport Transactions from './Transactions.js';\n\nclass HomePage extends React.Component {\n    render() {\n        return (\n            <>\n            <button\n            class = 'styledbutton'\n            onClick = {() => this.props.onClick(<AllUsers \n                                                onClick = {(page) => {this.props.onClick(page)}}\n                                                />)\n                        }\n            >\n                Show All Users\n            </button>\n            <button\n            class = 'styledbutton'\n            onClick = {() => this.props.onClick(<Transactions/>)\n                        }\n            >\n                Show All Transactions\n            </button>\n            </>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\n\nclass GoBack extends React.Component {\n    render() {\n        return (\n            <div class= 'gobackContainer'>\n                <div>\n                    <button\n                    class = 'goback '\n                    onClick = {() => {this.props.goBack()}}\n                    >\n                        &lt;&lt; Back\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GoBack;","import React from 'react';\n\nclass GoHome extends React.Component {\n    render() {\n        return(\n            <div class= 'gobackContainer'>\n                <div>\n                    <button\n                    class = 'goback '\n                    onClick = {() => {this.props.goHome()}}\n                    >\n                        &lt;&lt; Home\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GoHome;","import React from 'react';\nimport './App.css';\nimport HomePage from './HomePage.js';\nimport GoBack from './GoBack.js';\nimport GoHome from './GoHome.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content : <HomePage \n                onClick = {(page) => {this.handlePageRequest(page)}}\n                />,\n      history: [],\n    }\n    this.handleGoingBack.bind(this);\n    this.handleGoHomeRequest.bind(this);\n    this.handlePageRequest.bind(this);\n  }\n\n  handlePageRequest(page) {\n    this.setState({\n      content: page,\n      history: this.state.history.concat(this.state.content),\n    });\n  }\n\n  handleGoingBack() {\n    if (!this.state.history[0]){\n      return;\n    }\n    this.setState({\n      content: this.state.history.pop(),\n      history: this.state.history,\n    });\n  }\n\n  handleGoHomeRequest() {\n    if (!this.state.history[0]){\n      return;\n    }\n    this.setState({\n      content: this.state.history[0],\n      history: [],\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Credit <br/>Management <br/>App</p>\n          <GoHome goHome = {() => this.handleGoHomeRequest()}/>\n          <GoBack goBack = {() => this.handleGoingBack()}/>\n        </header>\n        <main style = {{'backgroundImage': 'linear-gradient(to bottom left, rgba(198,80,192,0.1),rgba(67,88,208,0.1))', 'paddingTop': '100px','paddingBottom': '100px', 'minHeight': '68vh'}}>\n          <div class = 'maincontainer'>\n            {this.state.content}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}